version: "3.5"

services:
  backend:
    container_name: backend
    restart: always
    networks:
      - webnet
    volumes:
      - ./backend:/usr/src/backend
      - /usr/src/backend/node_modules
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - 4000:4000
    environment:
      TYPEORM_HOST: db
      TYPEORM_CONNECTION: ${TYPEORM_CONNECTION}
      TYPEORM_USERNAME: ${TYPEORM_USERNAME}
      TYPEORM_PASSWORD: ${TYPEORM_PASSWORD}
      TYPEORM_DATABASE: ${TYPEORM_DATABASE}
      TYPEORM_TYPE: ${TYPEORM_TYPE}
      PASSPORT_SECRET: ${PASSPORT_SECRET}
    depends_on:
      - db

  frontend:
    container_name: frontend
    restart: always
    networks:
      - webnet
    volumes:
      - ./frontend:/usr/src/frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    expose:
      - 3000
    ports:
      - 3000:3000
    depends_on:
      - backend
    stdin_open: true

  db:
    container_name: database
    image: postgres
    networks:
      - webnet
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${TYPEORM_USERNAME}
      POSTGRES_PASSWORD: ${TYPEORM_PASSWORD}
      POSTGRES_DB: ${TYPEORM_TYPE}
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
networks:
  webnet:
